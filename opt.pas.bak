unit Opt;

{$mode objfpc}{$H+}

interface

uses
  Classes, SysUtils, FileUtil, Forms, Controls, Graphics, Dialogs, ExtCtrls,
  StdCtrls, Process; //, BaseUnix, Unix;

type

  { TForm3 }

  TForm3 = class(TForm)
    Button1: TButton;
    Button2: TButton;
    Button3: TButton;
    RadioButton1: TRadioButton;
    RadioButton2: TRadioButton;
    RadioGroup1: TRadioGroup;
    StaticText1: TStaticText;
    procedure Button1Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure Button3Click(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure RadioButton1Change(Sender: TObject); // выбор языка программы
    procedure lng; // перевести на выбранный язык эту форму
    procedure GetUsers; // Получить список пользователей этого ПК
    procedure AddUsers(wrd: string); // Добавить строку wrd к массиву строк users
    procedure Shell(command: string); // Выполнить команду
  private
    { private declarations }
  public
    { public declarations }
  end; 

var
  Form3: TForm3;
  users: array of string; // список пользователей в системе (в папке home)
  pram: string; // Строка параметров

implementation

{$R *.lfm}

uses start;

{ TForm3 }

procedure TForm3.RadioButton1Change(Sender: TObject);
begin
  if radiobutton1.Checked then start.lng:=0 else start.lng:=1;
  form1.SetLng;
  lng;
end;

procedure TForm3.FormCreate(Sender: TObject);
begin
  pram:='';
  lng;
end;

procedure TForm3.Button1Click(Sender: TObject);
// интеграция в контекстное меню
begin
   getusers;
end;

procedure TForm3.Button2Click(Sender: TObject);
// сохранить настройки программы
begin
  //в конфигурационном файле:
  // размер бумаги
  case form1.ComboBox1.ItemIndex of
       0: form1.SaveSett('paper','A4');
       1: form1.SaveSett('paper','A5');
       2: form1.SaveSett('paper','A6');
       3: form1.SaveSett('paper','10x15');
       4: form1.SaveSett('paper','15x20');
       5: form1.SaveSett('paper','x'+ inttostr(start.frms[5][0]) + 'y' + inttostr(start.frms[5][1]));
  end;
  //компоновка
  form1.SaveSett('comp',inttostr(start.comp-1));
  // ориентация бумаги
  if start.orn=1 then form1.SaveSett('orn','L') else form1.SaveSett('orn','default');
  // Язык
  if radiobutton2.Checked then form1.SaveSett('lang','i') else form1.SaveSett('lang','default');
  // масштаб
  if (start.ScaleX<>100) or (start.ScaleY<>100) then
     form1.SaveSett('scale', 'x>' + inttostr(start.ScaleX) + 'y>' + inttostr(start.ScaleY))
                             else  form1.SaveSett('scale', 'default');
  if start.pol<>10 then form1.SaveSett('mrg', inttostr(start.pol)) else form1.SaveSett('mrg','default');
  if form1.CheckBox3.Checked then form1.SaveSett('fill', 'yes') else form1.SaveSett('fill', 'default');
  if not(form1.CheckBox2.Checked) then form1.SaveSett('sml', 'yes') else form1.SaveSett('sml', 'default');

  { вариант сохранения в командной строке
  pram:='';
  pram:='*c'+inttostr(start.comp-1)+' ';
  case form1.ComboBox1.ItemIndex of
       0: pram:=pram+'*p'+ 'A4 ';
       1: pram:=pram+'*p'+ 'A5 ';
       2: pram:=pram+'*p'+ 'A6 ';
       3: pram:=pram+'*p'+ '10x15 ';
       4: pram:=pram+'*p'+ '15x20 ';
       5: pram:=pram+'*px'+ inttostr(start.frms[5][0]) + 'y' + inttostr(start.frms[5][1])+' ';
  end;
  if (start.ScaleX<>100) or (start.ScaleY<>100) then
     pram:=pram+'*ns '+ '*x=' + inttostr(start.ScaleX) + ' *y=' + inttostr(start.ScaleY)+' ';
  if start.orn=1 then pram:=pram+'*oL ';
  if radiobutton2.Checked then pram:=pram+'*i ';
  getusers;
  }
end;

procedure TForm3.Button3Click(Sender: TObject);
var
  pt: string;
  sr: tsearchrec;
  i: integer;
  fl: textfile;
  prnt: string;
begin
  pt := '/home/*';
  if RadioButton1.Checked then prnt:='Печать' else prnt:='Print';
  if findfirst(pt, faDirectory, sr) = 0 then
    repeat
         if pos('.', sr.Name) = 0 then addusers('/home/' + sr.Name + '/');
    until findnext(sr) <> 0;
  findclose(sr);
  for i:=0 to high(users) do
     begin
        pt:=users[i]+'.gnome2/nautilus-scripts';
        if DirectoryExists(pt) then // to gnome
          begin
             if FileExists(pt+'/Печать') then deletefile(pt+'/Печать');
             if FileExists(pt+'/Print') then deletefile(pt+'/Print');
          end;
        pt:=users[i]+'.kde/share/kde4/services/ServiceMenus';
        if DirectoryExists(pt) then // to kde
          begin
             if FileExists(pt+'/Печать.descktop') then deletefile(pt+'/Печать.descktop');
             if FileExists(pt+'/Print.descktop') then deletefile(pt+'/Print.descktop');
          end;
     end;
end;

procedure tform3.GetUsers;    // Получить список пользователей этого ПК   и создать файлы для контекстного меню
var
  pt: string;
  sr: tsearchrec;
  i: integer;
  fl: textfile;
  prnt: string;
begin
  pt := '/home/*';
  if RadioButton1.Checked then prnt:='Печать' else prnt:='Print';
  if findfirst(pt, faDirectory, sr) = 0 then
    repeat
         if pos('.', sr.Name) = 0 then addusers('/home/' + sr.Name + '/');
    until findnext(sr) <> 0;
  findclose(sr);
  for i:=0 to high(users) do
     begin
        pt:=users[i]+'.gnome2/nautilus-scripts';
        if DirectoryExists(pt) then // to gnome
          begin
              assignfile(fl, pt+'/'+prnt);
             rewrite(fl);
             writeln(fl, '#!/bin/sh');
             writeln(fl, ' ');
             writeln(fl, ParamStr(0)+' '+ pram +' $NAUTILUS_SCRIPT_SELECTED_FILE_PATHS');
             closefile(fl);
             //fpChmod (pt+'/'+prnt,&777);
          end;
        pt:=users[i]+'.kde/share/kde4/services/ServiceMenus';
        if DirectoryExists(pt) then // to kde
          begin
             assignfile(fl, pt+'/'+prnt+'.descktop');
             rewrite(fl);
             writeln(fl, '[Desktop Entry]');
             writeln(fl, 'Actions=add');
             writeln(fl, 'Icon=preferences-desktop-printer');
             writeln(fl, 'ServiceTypes=KonqPopupMenu/Plugin,all/allfiles');
             writeln(fl, 'Type=Service');
             writeln(fl, 'X-KDE-Priority=TopLevel');
             writeln(fl, ' ');
             writeln(fl, '[Desktop Action add]');
             writeln(fl, 'Exec='+ParamStr(0)+' '+ pram +' %F');
             writeln(fl, 'Icon=document-print');
             writeln(fl, 'Name=' + prnt);
             closefile(fl);
          end;
     end;
end;

procedure tform3.AddUsers(wrd: string); // Добавить строку wrd к массиву строк users
var
  i: integer;
begin
  i:=Length(users)+1;
  setlength(users, i);
  dec(i);
  users[i]:=wrd;
end;

procedure tform3.lng;
// переключение языка этого окна
begin
   case start.lng of
        0: begin
          form3.Caption:='Настройки';
          button1.Caption:='Интеграция';
          button1.Hint:='Интегрировать программу в контекстное меню Nautilus и Dolphin';
          button2.Caption:='По умолчанию';
          button2.Hint:='Сохранить текущие настройки как настройки по умолчанию';
          button3.Caption:='Отменить интеграцию';
          statictext1.Caption:='Внимание!'+#13+'Сохранение настроек'+#13+'возможно только'+#13+
                   'при запуске программы'+#13+'с правами'+#13+'администратора.';
        end;
        1: begin
           form3.Caption:='Settings';
           button1.Caption:='Integration';
           button1.Hint:='Integrate the program into the context menu Nautilus and Dolphin';
           button2.Caption:='Default';
           button2.Hint:='Save the current settings as the default settings';
           button3.Caption:='Cancel integration';
           statictext1.Caption:='Warning!'+#13+'Saving the settings'+#13+'can only be run'+#13+'as administrator';
         end;
   end;
end;

procedure TForm3.shell(command: string);
var
  sh: tProcess;
begin
  sh:=tprocess.Create(nil);
  sh.CommandLine:=command;
  sh.Execute;
  sh.Free;
end;


end.

